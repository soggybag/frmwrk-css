body {
	background-color: var(--color-background);
	color: var(--color-foreground);
	font-family: var(--font-stack);
	font-size: var(--font-size);
	line-height: var(--font-line-height);
	margin: 0;
}

/* Text and Headings */

p, .info, h1, h2, h3, h4, h5, h6, .navbar {
	margin: 0 0 var(--vertical-space) 0;
}

p:last-of-type {
	margin-bottom: 0;
}

h1, h2, h3, h4, h5, h6 {
	color: var(--color-md-dark);
}

h1 { font-size: 2.5em; line-height: 3rem; }
h2 { font-size: 2em; line-height: 2rem; }
h3 { font-size: 1.75em; line-height: 2rem; }
h4 { font-size: 1.5em; line-height: 2rem; }
h5 { font-size: 1em; font-weight: 500; }
h6 { font-size: 1em; font-weight: 400; }
			
strong {
	color: var(--color-md-dark);
}

em {
	color: var(--color-dark);
}
			
.info {
	background-color: var(--color-info);
	color: var(--color-background);
	padding: 1em;
	border-radius: 0.5em;
}
			
.info p {
	margin: 0;
}



/* Anchor Styles */

a {
	color: var(--color-primary);
	text-decoration: none;
	transition: 200ms;
}

a:link {}

a:visited { 
	/* vendor prefixes! */
	color: var(--color-primary-darker-2);
}

a:hover {
	/* vendor prefixes! */
	color: var(--color-primary-lighter-2);
}

/* Form Elements and Controls */

label > span {
	display: block
}
			
input, label {
	display: block;
}
			
form {
	display: flex;
	flex-direction: column;
}

button {
	--weight: normal; 
	/* Remove the default styles */
	border: none;
	font: inherit;
	box-shadow: none;
	background-color: transparent;

	/* Give the button a finger cursor */
	cursor: pointer;
	/* Style the button */
	border-width: 2px;
	border-style: solid;
	border-color: transparent;
	border-radius: 0.5em;
	padding: 0.7em 1em; /* Use padding to give the text some space */
	font-size: 1em;

	/* Think about adding a transition */
	transition: 200ms;

	/* Use some variables to control the appearance */
	font-weight: var(--weight);
	background-color: var(--background-color, var(--color-primary));
	color: var(--color-lightest);
}

/* Style the interactive states of the button */
button:hover {
	/* Use the variables here */ 
	background-color: var(--body-color);
	border-color: var(--background-color, var(--color-primary));
	color: var(--background-color, var(--color-primary));
}

button:active {
	background-color:var(--background-color, var(--color-primary));
	color: var(--color-lightest);
	/* Use filter to make the button darker */
	-webkit-filter: brightness(80%);
	-moz-filter: brightness(80%); 
	-ms-filter: brightness(80%);
	-o-filter: brightness(80%);
	filter: brightness(80%);
}

input[type=text], 
input[type=email], 
input[type=password], 
textarea {
	--border-color: var(--color-md-dark);
	padding: 0.7em 1em;
	border: 2px solid var(--border-color);
	border-radius: 0.5em;
	font-size: 1em;

	/* Add a transition */
	transition: 200ms;

	/* 
		This removes the accessibility outline 
		which should never be removed
		https://a11yproject.com/posts/never-remove-css-outlines/
	*/
	outline: none !important; 
}

  input[type=text]:focus, 
  input[type=email]:focus, 
  input[type=password]:focus,
  textarea:focus {
    --border-color: var(--color-primary);
  }

  label {
    display: block;
    margin: 0 0 1em 0;
  }

  label > span {
    font-size: 0.75em;
    display: block;
    margin: 1em 0;
  }



/* Switch Click 
This switch is toggled on a click. The JavaScript 
below adds or removes the class .on to change the 
visual state of the switch. */

.switch-2 {
	width: 54px;
	height: 32px;
	border-radius: 18px;
	border: 2px solid var(--color-medium);
	background-color: var(--color-light);
	position: relative;
	transition: 200ms;
	cursor: pointer;
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
}

.switch-2 > input[type=checkbox] {
	display: none;
}
  
.switch-2 > div {
	width: 28px;
	height: 28px;
	background-color: var(--color-md-light);
	border-radius: 50%;
	margin: 2px;
	position: absolute;
	left: 0;
	transition: 200ms
}
/* When the .switch has the class .on change the 
color to green. */

.switch-2 input:checked ~ div {
	background-color: var(--color-primary);
}
/* When the .switch has the .on class change the 
position left to 40px. */

.switch-2 input:checked ~ div {
	left: 22px;
}


/* ---------------- */


/* The container */
.control-checkbox {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 22px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */
.control-checkbox input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.control-checkbox > span {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: #eee;
}

/* On mouse-over, add a grey background color */
.control-checkbox:hover input ~ .control-checkbox > span {
  background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.control-checkbox input:checked ~ .control-checkbox > span {
  background-color: #2196F3;
}

/* Create the checkmark/indicator (hidden when not checked) */
.control-checkbox > span:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.control-checkbox input:checked ~ .control-checkbox > span:after {
  display: block;
}

/* Style the checkmark/indicator */
.control-checkbox > span:after {
  left: 9px;
  top: 5px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}


/* ************************ */

/* Nav bar styles */

/* Navbar */
.navbar {
	background-color: var(--color-foreground);
	color: var(--color-background);
	display: flex;
	justify-content: space-between;
	flex-direction: row;
	align-items: baseline;
}

.navbar > ul {
	margin: 0;
	padding: 0;
	list-style-type: none;
	display: flex;
	flex-direction: row;
	justify-content: flex-start;
	align-items: baseline;
}

/* Navbar links */
.navbar a {
	display: block;
	padding: 0.25em 1em;
	color: var(--color-info);
}

.navbar a:link {
	
}

.navbar a:visited {
	
}

.navbar a:hover {
	background-color: var(--color-light);
	color: var(--color-dark);
	filter: none;
}

.navbar a:active {
	background-color: var(--color-info);
	color: var(--color-lightest);
	filter: none;
}

/* Navbar Title */
.navbar .title {
	color: var(--color-light);
	font-weight: normal;
	font-weight: normal;
	font-size: 1em;
	letter-spacing: 0.15em;
	margin-bottom: 0;
	padding: 0 1em;
}



/* Page Footer */

.page-footer {
	background-color: var(--color-foreground);
	color: var(--color-background);
	display: flex;
	justify-content: center
}

.page-footer h1, 
.page-footer h2, 
.page-footer h3, 
.page-footer h4, 
.page-footer h5, 
.page-footer h6 {
	color: var(--color-light);
}

.page-footer > ul {
	margin: 0;
	padding: 0;
	padding: 2em;
	list-style-type: none;
}

.page-footer a {
	color: var(--color-info);
	filter: none;
}

.page-footer a:link {
	color: var(--color-background);
	filter: none;
}

.page-footer a:visited {
	
}

.page-footer a:hover {
	color: var(--color-light);
	filter: none;
}

.page-footer a:active {
	
}


